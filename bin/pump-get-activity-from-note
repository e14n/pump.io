#!/usr/bin/env node

// -*- mode: javascript -*-

// postnote.js
//
// Post an image with optional description
//
// Copyright 2011-2013, E14N https://e14n.com/
//                2014, Intevation GmbH 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

var path = require("path"),
    _ = require("underscore"),
    Step = require("step"),
    url = require("url"),
    common = require("../lib/pumpclient"),
    userCred = common.userCred,
    getJSON = common.getJSON,
    argv = require("optimist")
        .usage("Usage: $0 -u <username>")
        .demand(["u"])
        .alias("u", "username")
        .alias("s", "server")
        .alias("n", "nodeurl")
        .alias("P", "port")
        .describe("u", "User nickname")
        .describe("s", "Server name (default 'io.intevation.de')")
        .describe("P", "Port (default 443)")
        .default("P", 443)
        .default("s", "io.intevation.de")
        .argv,
    username = argv.u,
    server = argv.s,
    description = argv.d,
    port = argv.P,
    note = argv.n,
    cred;

Step(
    function() {
        userCred(username, server, this);
    },
    function(err, results) {
        var endpoint;
        if (err) throw err;
        cred = results;
        endpoint = url.format({
            protocol: ((port == 443) ? "https" : "http"),
            host: ((port == 80 || port == 443) ? server : server + ":" + port),
            pathname: "/api/user/"+username+"/feed"
        });
        getJSON(endpoint, cred, this);
    },
  function(err, body, resp) {
        if (err) {
            console.error(err);
        } else {
            var posts = _.filter(body.items, function(items){ return items.verb == 'share'; });
             _.each(posts, function(item) {
                if ( note === undefined ) {
                console.log("Note: "+item.object.id+" Activity: "+item.id);
                } else {
                  if (item.object.id.indexOf(note) != -1) console.log("Note: "+item.object.id+" Activity: "+item.id);
		}
            });
     }
    }
);
