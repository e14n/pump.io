#!/usr/bin/env node

// -*- mode: javascript -*-

// Copyright 2013, Mathias Gebbe Intevation GmbH
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//'oauth_token' : 'WlumbeW1LFNipktUGKCSJg',
//'username' : 'USERNAME',
//'password': 'PASSWORD'

var request = require('request'),
    readline = require('readline'),
    Step = require("step"),
    optimist = require("optimist")
        .usage("Usage: $0 -s serverUrl -u username -p passwort -o oauthtoken")
        .alias("s", "serverUrl")
        .alias("u", "username")
        .alias("p", "password")
        .alias("o", "oauthtoken")
        .alias("h", "help")
        .describe("s", "The Server URL - use https: https://server/oauth/authorize")
        .describe("u", "The username")
        .describe("p", "The password")
        .describe("o", "The shown OAuth Token")
        .describe("h","Print this help text")
        .default("s", "https://io.intevation.de/oauth/authorize");

var argv = optimist.argv;

var oauthtoken = argv.o,
    username = argv.u,
    password = argv.p,
    serverurl = argv.s;

var start,end,verifier;

var rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

Step(
    function(){
     var callback=this;
      if (argv.h) {
	    optimist.showHelp();
	    process.exit(0);
            }
      if(username === undefined) {
        rl.question("Enter the username: ", function(gusername) {
        gusername.trim();
        username=gusername;
        callback();
        });
      }else{
        callback();
        }
},  
    function(){
     var callback=this;
        if(password === undefined) {
          rl.question("Enter password for user "+username+": ", function(gpassword) {
          gpassword.trim();
          password = gpassword;
          callback();
        });
         }else{
          callback();
       }
    
    },
    function(){
     var callback=this;
        if(oauthtoken === undefined) {
          rl.question("Enter oauth token: ", function(goauth) {
          goauth.trim();
          oauthtoken = goauth;
          callback();
        });   
         }else{
          callback();
       }
    
    },
    function() {
     getVerifier(username,password,oauthtoken)
    }
);


function getVerifier(username,password,oauthtoken){

request.post(
    serverurl,
    { form: { oauth_token: oauthtoken, username: username, password: password  } },
    function (error, response, body) {
        if (!error && response.statusCode == 200) {
            // in body is the hole anwser
	    start = body.indexOf("name=\"verifier\"");
            end = body.indexOf("\"/>",start);
            verifier = body.substring(start+23,end);
            
            if ( verifier.search(/!DOCTYPE.+/) != -1){
              start = body.indexOf("<td id=\"verifier\">");
              end = body.indexOf("<\/td>",start);
              verifier = body.substring(start+18,end);
              console.log("The verifier is: " + verifier);
              process.exit("0");
            }else{
              console.log("The verifier is: " + verifier);
              process.exit("0");
	    }
        }else{
            console.log("Error! Maybe wrong credentials.");
            process.exit("1");
	}
    }
);

}
